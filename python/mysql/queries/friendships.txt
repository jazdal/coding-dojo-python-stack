- Create 6 new users

INSERT INTO users (first_name, last_name)
VALUES ('Monkey D.', 'Luffy'), ('Roronoa', 'Zoro'), ('Dorobo Neko', 'Nami'), ('Sogeking', 'Usopp'), ('Vinsmoke', 'Sanji'), ('Tony Tony', 'Chopper');


- Have user 1 be friends with user 2, 4, and 6

INSERT INTO friendships (user_id, friend_id)
VALUES (1, 2), (1, 4), (1, 6);


- Have user 2 be friends with user 1, 3, and 5

INSERT INTO friendships (user_id, friend_id)
VALUES (2, 1), (2, 3), (2, 5);


- Have user 3 be friends with user 2 and 5

INSERT INTO friendships (user_id, friend_id)
VALUES (3, 2), (3, 5);


- Have user 4 be friends with user 3

INSERT INTO friendships (user_id, friend_id)
VALUES (4, 3);


- Have user 5 be friends with user 1 and 6

INSERT INTO friendships (user_id, friend_id)
VALUES (5, 1), (5, 6);


- Have user 6 be friends with user 2 and 3

INSERT INTO friendships (user_id, friend_id)
VALUES (6, 2), (6, 3);


- Display the relationships created

SELECT users.first_name, users.last_name, users2.first_name AS friend_first_name, users2.last_name AS friend_last_name FROM users
JOIN friendships ON users.id = friendships.user_id
LEFT JOIN users AS users2 ON friendships.friend_id = users2.id;


- Return all users who are friends with the first user, make sure their names are displayed in the results.

SELECT users2.first_name AS friend_first_name, users2.last_name AS friend_last_name, users.first_name, users.last_name FROM users AS users2
LEFT JOIN friendships ON users2.id = friendships.friend_id
LEFT JOIN users ON friendships.user_id = users.id
WHERE users.id = 1;


- Return the count of all friendships

SELECT COUNT(*) FROM friendships;


- Find out who has the most friends and return the count of their friends

SELECT user_id, users.first_name, users.last_name, COUNT(user_id) AS friends FROM friendships
JOIN users ON users.id = friendships.user_id
GROUP BY user_id
ORDER BY friends DESC;


- Return the friends of the third user in alphabetical order

SELECT user_id, users.first_name, users.last_name, GROUP_CONCAT(' ', users2.first_name, ' ', users2.last_name ORDER BY users2.first_name) AS friend_names FROM users
JOIN friendships ON users.id = friendships.user_id
JOIN users AS users2 ON friendships.friend_id = users2.id
WHERE user_id = 3
GROUP BY user_id;